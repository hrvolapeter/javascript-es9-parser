initSidebarItems({"enum":[["AssignmentOperator",""],["BinaryOperator",""],["LogicalOperator",""],["MethodDefinitionKind",""],["NewExpressionArgument",""],["ProgramSourceType",""],["ProgramStatement",""],["PropertyKind",""],["UnaryOperator",""],["UpdateOperator",""],["VariableDeclarationKind",""]],"trait":[["ArrayExpression",""],["ArrayPattern",""],["ArrowFunctionExpression",""],["AssignmentExpression",""],["AssignmentPattern",""],["AssignmentProperty",""],["BinaryExpression",""],["BlockStatement",""],["BreakStatement",""],["CatchClause",""],["Class",""],["ClassBody",""],["ClassDeclaration",""],["ClassExpression",""],["ContinueStatement",""],["DebuggerStatement",""],["Declaration",""],["Directive",""],["DoWhileStatement",""],["EmptyStatement",""],["Expression",""],["ExpressionStatement",""],["ForInStatement",""],["ForOfStatement",""],["ForStatement",""],["Function",""],["FunctionBody",""],["FunctionDeclaration",""],["FunctionExpression",""],["Identifier",""],["IfStatement",""],["LabeledStatement",""],["Literal",""],["LogicalExpression",""],["MethodDefinition",""],["NewExpression",""],["Node",""],["ObjectExpression",""],["ObjectPattern",""],["Pattern",""],["Program",""],["Property",""],["RestElement",""],["ReturnStatement",""],["SequenceExpression",""],["SpreadElement",""],["Statement",""],["Super",""],["SwitchCase",""],["SwitchStatement",""],["ThisExpression",""],["ThrowStatement",""],["TryStatement",""],["UnaryExpression",""],["UpdateExpression",""],["VariableDeclaration",""],["VariableDeclarator",""],["WhileStatement",""],["WithStatement",""]]});